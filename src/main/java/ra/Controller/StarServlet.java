package ra.Controller;import ra.Model.Entity.Order;import ra.Model.Entity.Product;import ra.Model.Entity.Star;import ra.Model.Service.ProductService;import ra.Model.Service.StarService;import ra.Model.ServiceImp.ProductVerviceImp;import ra.Model.ServiceImp.StarServiceImp;import javax.servlet.ServletException;import javax.servlet.annotation.WebServlet;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;import java.io.IOException;import java.util.ArrayList;import java.util.List;@WebServlet(name = "StarServlet", value = "/StarServlet")public class StarServlet extends HttpServlet {    private ProductService<Product, String> productService = new ProductVerviceImp();    private StarService<Star, String> starService = new StarServiceImp();    @Override    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {        String action = request.getParameter("action");        if (action != null && action.equals("History")) {            HttpSession session = request.getSession();            Integer UserID = (Integer) session.getAttribute("UserID");            if (UserID == null) {                String Notify = "Vui lòng đăng nhập để sử dụng dịch vụ !";                request.getSession().setAttribute("NotifyLogin", Notify);                request.getRequestDispatcher("View/User/Home.jsp").forward(request, response);            } else {                List<Product> productList = productService.getProductByUserID(UserID);                request.setAttribute("listCart",productList);                request.getRequestDispatcher("View/User/History.jsp").forward(request, response);            }        }if(action!=null&&action.equals("RateStar"))   {            int productID = Integer.parseInt(request.getParameter("productID"))   ;            int orderID  = Integer.parseInt(request.getParameter("orderID"))  ;            Product product = productService.getById(productID);            request.setAttribute("listCart",product);            request.setAttribute("orderID",orderID);            request.getRequestDispatcher("View/User/rates.jsp").forward(request, response);        } if(action!=null&&action.equals("GetAll")){            List<Star> listStar = starService.getAll();            request.setAttribute("star",listStar);            request.getRequestDispatcher("View/Admin/Star/star.jsp").forward(request,response);        }   else if (action != null && action.equals("Update")) {            Star star = new Star();            star.setStarID( Integer.parseInt(request.getParameter("starID")));            star.setStarStatus(true);            boolean result = starService.update(star);            if(result){                List<Star> listStar = starService.getAll();                request.setAttribute("star",listStar);                request.getRequestDispatcher("View/Admin/Star/star.jsp").forward(request,response);            }        } else if (action != null && action.equals("Confirmed")) {            List<Star> listStar = starService.getAllConfirm();            request.setAttribute("star",listStar);            request.getRequestDispatcher("View/Admin/Star/starConfirm.jsp").forward(request,response);        }        }        @Override        protected void doPost (HttpServletRequest request, HttpServletResponse response) throws        ServletException, IOException {            response.setContentType("text/html;charset=UTF-8");            String action = request.getParameter("action");            if (action != null && action.equals("Send Rate")) {                HttpSession session = request.getSession();                Integer UserID = (Integer) session.getAttribute("UserID");               Star star = new Star();               star.setProductID(Integer.parseInt(request.getParameter("productID")));               star.setOrderID(Integer.parseInt(request.getParameter("orderID")));               star.setUserID(UserID);               star.setNumberStar(Integer.parseInt(request.getParameter("rateStar")));               star.setStarStatus(false);               boolean result = starService.create(star);                if (result) {                    request.getRequestDispatcher("View/User/alertRate.jsp").forward(request, response);                } else {                    request.getRequestDispatcher("View/Admin/Error/error.jsp").forward(request, response);                }            }   else if (action != null && action.equals("SearchConfirm")) {                String userName = request.getParameter("searchConfirm");                List<Star> listStar = starService.searchByconfirm(userName);                request.setAttribute("star",listStar);                request.getRequestDispatcher("View/Admin/Star/starConfirm.jsp").forward(request,response);            }   else if (action != null && action.equals("Search")) {                String userName = request.getParameter("search");                List<Star> listStar = starService.searchProByName(userName);                request.setAttribute("star",listStar);                request.getRequestDispatcher("View/Admin/Star/star.jsp").forward(request,response);            }        }    }